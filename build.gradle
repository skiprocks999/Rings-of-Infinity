buildscript {
    repositories {
        mavenCentral()
        maven {
        	url = 'https://files.minecraftforge.net/maven' 
        }
		jcenter()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.0.+', changing:'true'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.16.4-1.0alpha'
group = 'com.continf.ringsofinfinity' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'ringsofinfinity'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' 

minecraft {

    mappings channel: 'snapshot', version: '20201028-1.16.3'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                ringsofinfinity {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                ringsofinfinity {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'ringsofinfinity', '--all', '--output', file('src/generated/resources/')

            mods {
                RingsOfInfinity {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
   
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.28'

    
  // compile against the JEI API but do not include it at runtime
  compileOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.0.62:api")
  // at runtime, use the full JEI jar
  runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.0.62")

	

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "RingsOfInfinity",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

repositories{
		mavenCentral()
	    /*JEI Integration*/
  maven {
    // location of the maven that hosts JEI files
    name = "Progwml6 maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven {
    // location of a maven mirror for JEI files, as a fallback
    name = "ModMaven"
    url = "https://modmaven.k-4u.nl"
  }
}

jar.finalizedBy('reobfJar') 


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    /*
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
      
        

    }
    */
}